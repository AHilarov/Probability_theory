# Задача 1. Известно, что генеральная совокупность распределена нормально
# со средним квадратическим отклонением, равным 16.
# Найти доверительный интервал для оценки математического ожидания с надежностью
# 0.95, если выборочная средняя M = 80, а объем выборки n = 256.

# Задача 2. В результате 10 независимых измерений некоторой величины X, выполненных с
# одинаковой точностью,
# получены опытные данные:
# 6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1
# Предполагая, что результаты измерений подчинены нормальному закону распределения
# вероятностей, оценить истинное значение величины X при помощи доверительного интервала,
# покрывающего это значение с доверительной вероятностью 0,95.

# Задача 3. Рост дочерей 175, 167, 154, 174, 178, 148, 160, 167, 169, 170
# Рост матерей 178, 165, 165, 173, 168, 155, 160, 164, 178, 175
# Используя эти данные построить 95% доверительный интервал для разности среднего
# роста родителей и детей.

import math
import numpy as np
from scipy.stats import t

#1
print ('Задача 1')

alpha = 0.05
mean = 80
n = 256
std = 16
se = std / math.sqrt(n)
t_critical = abs(t.ppf(alpha / 2, n - 1))
t_critical_upper = abs(t.ppf(1 - alpha / 2, n - 1))
lower_bound = mean - t_critical * se
upper_bound = mean + t_critical_upper * se
print(f"Доверительный интервал: ({lower_bound:.2f}, {upper_bound:.2f})")

#2
print ('\nЗадача 2')
data = [6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1]
n = len(data)
mean = np.mean(data)
std = np.std(data, ddof=1)  

alpha = 0.05  
t = t.ppf(1 - alpha/2, n-1)  

lower = mean - t * std / np.sqrt(n)
upper = mean + t * std / np.sqrt(n)

print(f"Доверительный интервал: ({lower:.3f}, {upper:.3f})")


#3
from scipy import stats
print ('\nЗадача 3')
daughters = [175, 167, 154, 174, 178, 148, 160, 167, 169, 170]
mothers = [178, 165, 165, 173, 168, 155, 160, 164, 178, 175]

n = len(daughters)
diff_mean = np.mean(daughters) - np.mean(mothers)
s = np.sqrt((np.var(daughters, ddof=1) + np.var(mothers, ddof=1)) / n)
t = stats.t.ppf(1 - 0.05/2, n-1)

lower = diff_mean - t * s
upper = diff_mean + t * s

print(f"Доверительный интервал: ({lower:.3f}, {upper:.3f})")